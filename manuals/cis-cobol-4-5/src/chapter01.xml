<?xml version="1.0"?>
<chapter xmlns="http://docbook.org/ns/docbook">
  <title>Introduction</title>
  <section>
    <title>WHAT IS CIS COBOL?</title>
    <indexterm>
      <primary>CIS COBOL, What It Is</primary>
    </indexterm>
    <para>
COBOL (COmmon Business Oriented Language) is the most widely and
extensively used language for the programming of commercial and
administrative data processing.
</para>
    <para>
CIS COBOL is a Compact, Interactive and Standard COBOL Language System
which is designed for use on microprocessor-based computers and intelligent
terminals.
</para>
    <para>
It is based on the ANSI COBOL given in "American National Standard
Programming Language COBOL" (ANSI X3.23 1974). The CIS COBOL implementation
has been selected from both levels of ANSI COBOL. The following modules are
fully implemented at Level 1:
</para>
    <itemizedlist spacing="compact">
      <listitem>
        <para>Nucleus</para>
      </listitem>
      <listitem>
        <para>Table Handling</para>
      </listitem>
      <listitem>
        <para>Sequential Input and Output</para>
      </listitem>
      <listitem>
        <para>Relative Input and Output</para>
      </listitem>
      <listitem>
        <para>Indexed Input and Output</para>
      </listitem>
      <listitem>
        <para>Segmentation</para>
      </listitem>
      <listitem>
        <para>Library</para>
      </listitem>
      <listitem>
        <para>Inter-Program Communication</para>
      </listitem>
      <listitem>
        <para>Debug</para>
      </listitem>
    </itemizedlist>
    <para>
      In addition many Level 2 features are implemented such as:
</para>
    <itemizedlist spacing="compact">
      <listitem>
        <para>Nucleus - Nested IF, PERFORM UNTIL</para>
      </listitem>
      <listitem>
        <para>Relative and Indexed sequential I/O - START statement</para>
      </listitem>
      <listitem>
        <para>Inter-Program Communication - CANCEL statement</para>
      </listitem>
    </itemizedlist>
    <para>
This manual is intended as a reference work for COBOL programmers and
material from the ANSI language standard document is included.
</para>
    <para>
The package has been proved to meet and exceed the COBOL ANSI standard
X3.23 and has been certified by the Federal Compiler Testing Center (FCTC)
under the direction of the General Services Administration (GSA) as
validated at Federal Low Intermediate Level. The GSA Validation Summary
Report is available under the reference CCVS74-VSR685.
</para>
    <para>
Along with the ANSI implementation CIS COBOL also contains several
language extensions specifically oriented to the small computer environment.
These enable a CIS COBOL program to format CRT screens for data input and
output (DISPLAY and ACCEPT), READ and WRITE text files efficiently and
define external file names at run time.
</para>
    <para>
The programmer wishing to transport an existing COBOL program to run
under CIS COBOL must  check that the individual language features he has used
are supported by CIS COBOL. The COBOL SECTION statements in the
Segmentation feature can be performed using the PERFORM statement.
</para>
    <para>
A compile time ANSI switch can be set that makes certain COBOL source
mandatory, whereas if not set it is optional. (See Chapter 2).
</para>
    <para>
The CIS COBOL compiler is designed to enable programs to be developed
in a 48K machine. The Compiler supports sequential, relative and indexed
sequential files, as well as interactive communications via the ACCEPT and
DISPLAY verbs.
</para>
    <para>
The CIS COBOL System also contains a powerful utility called FORMS-2
that enables the Operator to define screen layouts from a screen <quote>module</quote>
and produce automatically the data description for direct inclusion in a
CIS COBOL program. This is described in the <citetitle pubwork="book">CIS COBOL Operating Guide</citetitle>.
</para>
    <para>
CIS COBOL programs are created using a conventional text editor, The
Compiler compiles the programs and the Run-Time system links with the
compiled output to form a running user program. A listing of the CIS COBOL
program is provided by the Compiler during compilation. Error messages are
inserted in the listing. Interactive Debugging facilities are provided for
run-time use, and these are described in the <citetitle pubwork="book">CIS COBOL Operating Guide</citetitle>.
</para>
    <para>
CIS COBOL is designed to be interfaced easily to any microprocessor
operating system. Detailed operating characteristics are dependent on the
particular host operating system used and are defined in the appropriate
Operating Guide.
</para>
    <section>
      <title>PROGRAM STRUCTURE</title>
      <indexterm>
        <primary>Program Structure</primary>
      </indexterm>
      <indexterm>
        <primary>Structure, Program</primary>
      </indexterm>
      <para>
     A COBOL program consists of four divisions:
</para>
      <orderedlist>
        <listitem>
          <para>
IDENTIFICATION DIVISION - An identification of the program
</para>
        </listitem>
        <listitem>
          <para>
ENVIRONMENT DIVISION - A description of the equipment to be used to
compile and run the program
</para>
        </listitem>
        <listitem>
          <para>
DATA DIVISION - A description of the data to be processed
</para>
        </listitem>
        <listitem>
          <para>
PROCEDURE DIVISION - A set of procedures to specify the operations to
be performed on the data
</para>
        </listitem>
      </orderedlist>
      <para>
Each division is divided into sections which are further divided into
paragraphs which in turn are made up of sentences.
</para>
      <para>
Within these subdivisions of a COBOL program, further subdivisions
exist as clauses and statements. A clause is an ordered set of COBOL
elements that specify an attribute of an entry, and a statement is a
combination of elements in the Procedure Division that include a COBOL verb
and constitute a program instruction.
</para>
    </section>
  </section>
  <section>
    <title>FORMATS AND RULES</title>
    <section>
      <title>GENERAL FORMAT</title>
    <indexterm>
      <primary>General Formats</primary>
    </indexterm>
    <indexterm>
      <primary>Formats, General</primary>
    </indexterm>
      <para>
     A general format is the specific arrangement of the elements of a
clause or a statement, Throughout this document a format is shown adjacent
to information defining the clause or statement.       When more than one
specific arrangement is permitted, the general format is separated into
numbered formats. Clauses must be written in the sequence given in the
general formats. (Clauses that are optional must appear in the sequence
shown if they are used). In certain cases, stated explicitly in the rules
associated with a given format, the clauses may appear in sequences other
than that shown. Applications, requirements or restrictions are shown as rules.
</para>
    </section>
    <section>
      <title>SYNTAX RULES</title>
    <indexterm>
      <primary>Syntax Rules</primary>
    </indexterm>
      <para>
Syntax rules are those rules that define or clarify the order in which
words or elements are arranged to form larger elements such as phrases,
clauses, or statements. Syntax rules also impose restrictions on individual
words or elements.
</para>
      <para>
These rules are used to define or clarify how the statement must be
written, i.e., the order of the elements of the statement and restrictions
on what each element may represent.
</para>
    </section>
    <section>
      <title>GENERAL RULES</title>
      <indexterm>
        <primary>Rules, General</primary>
      </indexterm>
      <para>
A general rule is a rule that defines or clarifies the meaning or
relationship of meanings of an element or set of elements. It is used to
define or clarify the semantics of the statement and the effect that it has
on either execution or compilation.
</para>
    </section>
    <section>
      <title>ELEMENTS</title>
      <indexterm>
        <primary>Elements</primary>
      </indexterm>
      <para>
Elements which make up a clause or a statement consist of uppercase
words, lowercase words, level-numbers, brackets, braces, connectives and
special characters (see Chapter 2).
</para>
    </section>
  </section>
  <section>
    <title>SOURCE FORMAT</title>
    <indexterm>
      <primary>Source Format</primary>
    </indexterm>
    <indexterm>
      <primary>Formats, Source</primary>
    </indexterm>
    <para>
The COBOL source format divides each COBOL source record into 72 columns.
These columns are used in the following way:
</para>
    <informaltable frame="none" colsep="0" rowsep="0">
      <tgroup cols="2">
        <colspec colwidth="2in" align="left"/>
        <colspec colwidth="2in"/>
        <tbody>
          <row>
            <entry>Columns 1 - 6</entry>
            <entry>Sequence number</entry>
          </row>
          <row>
            <entry>Column  7</entry>
            <entry>Indicator area</entry>
          </row>
          <row>
            <entry>Columns 8 - 11</entry>
            <entry>Area A</entry>
          </row>
          <row>
            <entry>Columns 12 -72</entry>
            <entry>Area B</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
    <section>
      <title>SEQUENCE NUMBER</title>
      <indexterm>
        <primary>Sequence Number</primary>
      </indexterm>
      <indexterm>
        <primary>Number, Sequence</primary>
      </indexterm>
      <para>
     A sequence number of six digits may be used to identify each source
program line.
</para>
    </section>
    <section>
      <title>INDICATOR AREA</title>
      <indexterm>
        <primary>Indicator Area</primary>
      </indexterm>
      <indexterm>
        <primary>Area, Indicator</primary>
      </indexterm>
      <para>
An asterisk * in this area marks the line as documentary comment only.
Such a comment line can appear anywhere in the program after the
Identification Division header. Any characters from the ASCII character set
can be included in Area A and Area B of the line.
</para>
      <para>
A stroke /, in the indicator area acts as a comment line above but
causes the page to eject before printing the comment.
</para>
      <para>
A "D" in the indicator area represents a debugging line.   Areas A and B
may contain any valid COBOL sentence.
</para>
      <para>
A "-" in the indicator area represents a continuation line.
</para>
      <para>
Section names and paragraph names begin in Area A and are followed by a
period and a space. Level indications FD, 01 and 77 begin in Area A and are
followed in Area B by the appropriate file and record description.
</para>
      <para>
Program sentences may commence anywhere in Area A or Area B.   More than
one sentence is permitted in each source record.
</para>
      <para>
Note that TAB characters are not permitted in CIS COBOL source.
</para>
      <para>
Figure 1-1 shows the source format of a typical program.
</para>
      <programlisting width="80" language="cobol"><![CDATA[** CIS COBOL V4.5                   STOCK.CBL                     PAGE: 0001
**
** OPTIONS SELECTED :
**     FORM(72)
**
000010 IDENTIFICATION DIVISION.                                         0118
000020 PROGRAM-ID. STOCK-FILE-SET-UP.                                   0118
000030 AUTHOR. MICRO FOCUS LTD.                                         0118
000040 ENVIRONMENT DIVISION.                                            0118
000050 CONFIGURATION SECTION.                                           0118
000060 SOURCE-COMPUTER.                                                 0118
000070 OBJECT-COMPUTER.                                                 0118
000075 SPECIAL-NAMES. CONSOLE IS CRT.                                   0118
000080 INPUT-OUTPUT SECTION.                                            0118
000090 FILE-CONTROL.                                                    0118
000100     SELECT STOCK-FILE ASSIGN "STOCK.IT"                          0184
000110     ORGANIZATION INDEXED                                         0186
000120     ACCESS DYNAMIC                                               0186
000130     RECORD KEY STOCK-CODE.                                       0186
000140 DATA DIVISION.                                                   01BE
000150 FILE SECTION.                                                    01BE
000160 FD  STOCK-FILE: RECORD 32.                                       01BE
000170 01  STOCK-ITEM.                                                  01BE
000180     02 STOCK-CODE PIC X(4).                                      01BE
000190     02 PRODUCT-DESC PIC X(20).                                   01C2
000200     02 UNIT-SIZE PIC 9(4).                                       01D6
000210 WORKING STORAGE SECTION.                                         01DC
000220 01  SCREEN-HEADINGS.                                             01DC 00
000230     02  ASK-CODE PIC X(21) VALUE "STOCK CODE     <    >".        01DC 00
000240     02  FILLER PIC X(59).                                        01F3 15
000250     02  ASK-DESC PIC X(16) VALUE "DESCRIPTION    <".             022C 50
000260     02  SI-DESC PIC X(21) VALUE "                   >".          023C 60
000270     02  FILLER PIC(43).                                          0251 75
000280     02  ASK-SIZE PIC X(21) VALUE "UNIT SIZE      <    >".        027C A0
000290  01  ENTER-IT REDEFINES SCREEN-HEADINGS.                         01DC 00
000300     02  FILLER PIC X(16).                                        01DC 00
000310     02  CRT-STOCK-CODE   PIC X(4).                               01EC 10
000320     02  FILLER       PIC X(76).                                  01F0 14
000330     02  CRT-PROD-DESC    PIC X(20).                              023C 60
000340     02  FILLER       PIC X(60).                                  0250 74
000350     02  CRT-UNIT-SIZE    PIC 9(4).                               028C B0
000360     02  FILLER           PIC X.                                  0290 B4
000370 PROCEDURE DIVISION.                                              0000
000380 SR1.                                                             001C 00
000390     DISPLAY SPACE.                                               001D
000400     OPEN I-O STOCK-FILE.                                         0020
000410     DISPLAY SCREEN-HEADINGS.                                     0024
000420 NORMAL-INPUT.                                                    0038 00
000430     MOVE SPACE TO ENTER-IT.                                      0039
000440     DISPLAY ENTER-IT.                                            003F
000450 CORRECT-ERROR.                                                   0056 00
000460     ACCEPT ENTER-IT.                                             0057
000470     IF CRT-STOCK-CODE = SPACE GO TO END-IT.                      006E
000480     IF CRT-UNIT-SIZE NOT NUMERIC GO TO CORRECT-ERROR.            0078
000490     MOVE CRT-PROD-DESC TO PRODUCT-DESC.                          0081
000500     MOVE CRT-UNIT-SIZE TO UNIT-SIZE.                             0087
000510     MOVE CRT-STOCK-CODE TO STOCK-CODE.                           008F
000520     WRITE STOCK-ITEM INVALID KEY GO TO CORRECT-ERROR.            0095
000530     GO TO NORMAL-INPUT.                                          00A1
000540 END-IT.                                                          00A4 00
000550     CLOSE STOCK-FILE.                                            00A5
000560     DISPLAY SPACE.                                               00A9
000570     DISPLAY "END OF PROGRAM".                                    00AC
000580     STOP RUN.                                                    00BD
** CIS COBOL V4.5 REVISION 4                                  URN AA/0000/AA
** COMPILER COPYRIGHT (C) 1978,1982 MICRO FOCUS LTD
** ERRORS=00000 DATA=00768 CODE=00256 DICT=00409:20662/21071 GSA FLAGS=  OFF
<---->|<--><-----------------------------------------------------------><---->
  |   | |     |                                    Inserted by Compiler---+
  |   | |     +-- Columns 12-72 - Area B
  |   | +-- Columns 8-11 - Area A
  |   +-- Column 7 - Indicator Area
  +-- Columns 1-6 - Sequence Number]]></programlisting>
      <figure>
        <title>Sample Program Listing Showing Source Format</title>
      </figure>
    </section>
  </section>
</chapter>
