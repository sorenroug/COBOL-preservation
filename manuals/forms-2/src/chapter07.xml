<?xml version="1.0"?>
<chapter xmlns="http://docbook.org/ns/docbook">
  <title>FORMS-2 USER SCREEN GENERATION EXAMPLE</title>
  <para>
It is required to build the data entry form:
</para>
  <screen>
NAME      [                   ]
ADDRESS   [                   ]
          [                   ]
          [                   ]
TEL       [         ]



</screen>
  <para>
where NAME and ADDRESS are alphanumeric fields and TEL is a numeric field
At data entry time after insertion of the name, address and telephone
number P. Smith, 8 George Street, Plymouth, Devon, 88326, the fora is
required to appear as:
</para>
  <screen>
NAME      [SMITH. P           ]
ADDRESS   [8 George Street,   ]
          [Plymouth           ]
          [Devon              ]
TEL       [88326    ]



</screen>
  <para>
It is assumed the system is booted, the issued files have been copied to the
CIS COBOL O/S system disk so that the CHK file contents can be compiled
(Step 13), and that FORMS-2 has been configured to your CRT.
</para>
  <para>
The following steps must then be carried out:
</para>
  <orderedlist>
    <listitem>
      <para>The operator loads FORMS-2 by entering the load command for your O/S.</para>
      <para>Note that the program name for load purposes is F0RMS2.</para>
      <para>See Appendix D for specific Operating System format for this command.</para>
    </listitem>
    <listitem>
      <para>FORMS-2 displays Screen 101 requesting a six-character base for
file-names and data-names followed by four other questions. If the CRT
is standard (24 lines) and the Standard CIS COBOL compiler is In use no
further questions need be answered for this screen. Key DEMO1 followed
by the RETURN key if the default screen size (24) is correct and the
standard compiler is in use.
</para>
    </listitem>
    <listitem>
      <para>
FORMS-2 displays Screen I02 to request the output file option type and
drive number. Key RETURN to accept the default values.
</para>
    </listitem>
    <listitem>
      <para>
    FORMS-2 displays Screen W01 to request the Screen Type option. Note
the default "A" and press the RETURN key.
</para>
    </listitem>
    <listitem>
      <para>
  FORMS-2 displays a blank screen. Use the cursor control keys and the
normal character keys to set up the following text on the screen:
</para>
      <screen>
NAME      [                   ]
ADDRESS   [                   ]
          [                   ]
          [                   ]
TEL       [         ]



</screen>
      <para>
Press the RETURN key.
</para>
    </listitem>
    <listitem>
      <para>
  FORMS-2 puts "__" in the top left of the screen. Press the SPACE and
RETURN keys
</para>
    </listitem>
    <listitem>
      <para>
  FORMS-2 processes the screen to create a fixed text form. This takes a
short period and involves the following displays on the CRT:
</para>
      <screen>
  DDS source code as generated, followed by a redisplay of the fixed
  text as it is written to the Screen Image file.
</screen>
      <para>
  A message is then displayed giving the name of the fixed text Screen
Image file created. Press RETURN as requested.
</para>
    </listitem>
    <listitem>
      <para>
  FORMS-2 displays Screen W01 to request the Screen Type option. Note
the default is "C" and press the RETURN key.
</para>
    </listitem>
    <listitem>
      <para>
  FORMS-2 displays the fixed text screen as background data. The
operator then uses the cursor control keys and keys in X&#x2019;s and 9*s
alone to set up the screen as follows:
</para>
      <screen>
NAME      [XXXXXXXXXXXXXXXXXXX]
ADDRESS   [XXXXXXXXXXXXXXXXXXX]
          [XXXXXXXXXXXXXXXXXXX]
          [XXXXXXXXXXXXXXXXXXX]
TEL       [999999999]



</screen>
      <para>
Press the RETURN key.
</para>
    </listitem>
    <listitem>
      <para>
  FORMS-2 displays "__" in the top left hand of the screen; press the
SPACE and RETURN keys. There is a short pause while FORMS-2 validates
the screen content, during which the following message is displayed:
</para>
      <screen>
  WORK SCREEN VALIDATION in progress - DO NOT press RETURN
</screen>
    </listitem>
    <listitem>
      <para>
  FORMS-2 processes the X&#x2019;s and 9&#x2019;s to create a variable data form, with
the following displays to the CRT as it goes:
</para>
      <screen>
  DDS source code as generated, followed by a redisplay of the fixed
  text as it is written to the Screen Image file.
</screen>
      <para>
  A message is then displayed giving the name of the variable data screen
image file created. Press RETORN as requested.
</para>
    </listitem>
    <listitem>
      <para>
  FORMS-2 displays screen W01 again. Key ! followed by RETURN to.
terminate the run. FORMS-2 displays the names of the DDS and CH.K files
created and displays an END OF RUN message.
</para>
    </listitem>
    <listitem>
      <para>
  Compile the check-out program by typing the standard CIS COBOL
compilation command for your Operating System with the directive
COPYLIST and file name DEMO1.CHK (See Appendix D).
</para>
    </listitem>
    <listitem>
      <para>
  When the compilation finishes, the two screens can be checked out by
using the standard run command for your Operating System to load the
intermediate code from file:
</para>
      <screen>
  DEMO1.INT
</screen>
      <para>
  See Appendix D
</para>
    </listitem>
    <listitem>
      <para>
  The Demonstration program will then run. The fixed data form Is
displayed on the screen. The variable data form is used to accept
data.
</para>
      <para>
Satisfy yourself that the cursor can only be placed in the variable
fields, and that the data keyable -Into the fields depends on whether X
or 9 was specified. The effect of left fill character "." may also be
tested.
  </para>
      <para>
When satisfied, press RETURN to complete. A message is displayed as
follows:
</para>
      <screen>
  CHECK-OUT completed
  Repeat? [N] (Y=Yes)
</screen>
      <para>
  Press RETURN to accept the No default and complete.
</para>
    </listitem>
    <listitem>
      <para>
  The Check-Out program displays:
</para>
      <screen>
  END OF FORMS2 CHECK-OUT
</screen>
      <note>
        <para>
    The variable form is used in the demonstration for ACCEPTing data. In
practice the form can be used for DISPLAYing data as well as ACCEPTing
it. The demonstration shows the extent and type of each field which
will be the same in DISPLAY as well&#x2019; as ACCEPT. A useful technique for
clearing just the variable data fields on the screen Is to move spaces
to the ACCEPT record and then display it.
</para>
      </note>
    </listitem>
    <listitem>
      <para>
  You can now examine the disk files:
</para>
      <screen>
      DEMO1.DDS
      DEMO1.CHK
      DEMO1.S02
      DEMO1.S01
      DEMO1.INT
      DEMO1.LST
</screen>
      <para>
  to check the output from FORMS-2 during this use.
</para>
    </listitem>
    <listitem>
      <para>
  You have now learnt how to use FORMS-2 to create screens of fixed and
variable data automatically for inclusion in your CIS COBOL program.
</para>
      <para>
If you continue with steps 19 onwards you will learn to update both the
fixed and variable data screens already created by moving them from
background into foreground.
  </para>
    </listitem>
    <listitem>
      <para>
  Reload FORMS-2 by typing the load command for your 0/S. See Appendix D.
</para>
    </listitem>
    <listitem>
      <para>
  FORMS-2 displays Screen 101 requesting the six-character file- and
data-name base as at step 2. Answer the questions as necessary at step
2 and press RETURN.
</para>
    </listitem>
    <listitem>
      <para>
  FORMS-2 displays Screen 102 requesting the output file option type and
drive number; key RETURN to accept the default values.
</para>
    </listitem>
    <listitem>
      <para>
  FORMS-2 displays the message:
</para>
      <screen>
  DEMO1.DDS already exists
  overwrite? [N] (Y=Yes)
</screen>
      <para>
  Key Y and press RETURN
</para>
      <note>
        <para>
    If the No default is entered here, the run is abandoned.
</para>
      </note>
    </listitem>
    <listitem>
      <para>
  FORMS-2 displays the message:
</para>
      <screen>
  DEMO1.CHK already exists
  overwrite? [N] (Y=Yes)
</screen>
      <para>
  Key Y and press RETURN
</para>
      <note>
        <para>
    If the No default is entered here, the run is abandoned.
</para>
      </note>
    </listitem>
    <listitem>
      <para>
  FORMS-2 displays Screen W01 again. Press RETURN to accept the default
option A.
</para>
    </listitem>
    <listitem>
      <para>
  FORMS-2 displays a blank screen in Edit Mode. Press RETURN to enter
Command Mode, then F followed by RETURN to invoke the
Foreground/Background selection screen. (We want to update our form so
it must be in Foreground).
</para>
    </listitem>
    <listitem>
      <para>
  FORMS-2 displays the Foreground option screen. Enter option F then the
filename DEMO1.S00, then press RETURN.
</para>
    </listitem>
    <listitem>
      <para>
  FORMS-2 displays screen W02 again. Select option A to return to Edit
Mode.
</para>
    </listitem>
    <listitem>
      <para>
  FORMS-2 displays the fixed text screen (previously created at step 5).
Move the cursor to the word ADDRESS and overtype it with ABODE.
Remember to overtype the extra characters SS with spaces, and then
press RETURN.
</para>
    </listitem>
    <listitem>
      <para>
  Enter the SPACE command, then RETURN.
</para>
    </listitem>
    <listitem>
      <para>
  FORMS-2 displays the following message reminding you that your altered
fixed text Screen Image is about to overwrite your previous Screen
Image In the file:
</para>
      <screen>
  DEMO1.S00 already exists
  overwrite? [N] (Y=Yes)
</screen>
      <para>
  Key Y and press RETURN
</para>
      <note>
        <para>
    If the No default is entered here, a file Identity for a new
Screen Image would be requested.
</para>
      </note>
    </listitem>
    <listitem>
      <para>
  FORMS-2 displays the screen image and then displays the file name as
follows:
</para>
      <screen>
  File created = DEMO1.S00
</screen>
      <para>
  Press RETURN to continue.
</para>
    </listitem>
    <listitem>
      <para>
  FORMS-2 displays screen W01 with option C as default to enable
specification of variable data fields. Enter RETURN to accept the
default.
</para>
    </listitem>
    <listitem>
      <para>
  FORMS-2 displays the altered fixed text as followed to assist in
defining the variable fields.
</para>
      <screen>
NAME      [                   ]
ADDRESS   [                   ]
          [                   ]
          [                   ]
TEL       [         ]



</screen>
      <para>
Press RETURN to enter Command Mode then F then RETURN.
</para>
    </listitem>
    <listitem>
      <para>
FORMS-2 displays the Foreground/Background Operations screen again.
Enter the option F then the file name DEMO1.S01, then press RETURN to
retrieve your variable text created at step 9.
</para>
    </listitem>
    <listitem>
      <para>
  FORMS-2 displays Screen W02 with option H as default. If you press
RETURN to accept this default, FORMS-2 displays the current Foreground
contents. Note that this is only the X's and 9's that define the
variable data fields (the fixed text Is in the Background area). Press
RETURN to re-invoke Screen W02.
</para>
    </listitem>
    <listitem>
      <para>
  FORMS-2 displays Screen W02 with A as default. Press RETURN to accept
this default.
</para>
    </listitem>
    <listitem>
      <para>
  FORMS-2 displays the whole form again. (We could now alter the
variable text fields if required).
</para>
      <para>
  You have now seen facilities to retrieve fixed text and variable text
from previously created files. Note that with a small number of
variable data fields such as in this example it would, in practice, be
easier to re-key them.
</para>
    </listitem>
    <listitem>
      <para>
  Press RETURN then SPACE then RETURN to process the altered form. Again
there is a pause while FORMS-2 validates the variable fields.
</para>
    </listitem>
    <listitem>
      <para>
  FORMS-2 produces the DDS file then displays the message:
</para>
      <screen>
  DEMO1.S01 already exists
  overwrite? [N] (Y=Yes)
</screen>
    </listitem>
    <listitem>
      <para>
  A message is displayed as follows:
</para>
      <screen>
  File created = DEMO1.S00
</screen>
    </listitem>
    <listitem>
      <para>
  FORMS-2 displays screen W01 again. This time enter ! and press RETURN
to complete the run.
</para>
    </listitem>
    <listitem>
      <para>
  Repeat steps 13 to 16 if you wish to run the Check-Out program again to
verify the altered form.
</para>
    </listitem>
  </orderedlist>
</chapter>
