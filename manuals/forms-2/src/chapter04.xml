<?xml version="1.0"?>
<chapter xmlns="http://docbook.org/ns/docbook">
  <title>DATA DESCRIPTIONS</title>
  <para>
    This Chapter describes the CIS or L/II COBOL Data Descriptions that FORMS-2 can
    generate in the file <filename>filename.DDS</filename>, and a knowledge of COBOL is a
prerequisite for reading it.
</para>
  <para>
The CIS COBOL and L/II extensions to the ACCEPT and DISPLAY verbs allow comprehensive
screen handling to be included in a user application. (See
<citetitle pubwork="book">CIS or L/II COBOL Language Reference Manual</citetitle>).
Programming the necessary data description
statements can be tedious and expensive in terms of programmer time,
particularly since it is very prone to simple errors.
</para>
  <para>
FORMS-2 simplifies the production of error-free data descriptions by allowing
screen layouts (forms) to be specified in the most convenient way, namely by
setting them up in situ on the screen as described in Chapters 2 and 3. If
the facility is invoked by selection of an appropriate option at screen I02
during the Initialisation Phase, FORMS-2 automatically converts this Input to
the necessary COBOL statements and outputs these to a data description
(DDS) file. The user merely incorporates this code in his source
appiication code by means of the CIS or L/II COBOL COPY verb and uses record-names
and data-names consistent with those generated by FORMS-2.
</para>
  <section>
    <title>RECORD-NAME AND DATA-NAME GENERATION</title>
    <indexterm>
      <primary>RECORD-NAME AND DATA-NAME GENERATION</primary>
    </indexterm>
    <para>
      At Initialisation screen I01 a base name is requested from the user. This
Is a 6-character field into which the user enters any name of his choice
consistent with COBOL data naming (See
<citetitle pubwork="book">CIS or L/II COBOL Language Reference Manual</citetitle>).
This base is then used to generate the COBOL data-names.
    </para>
    <section>
      <title>RECORD NAMING</title>
      <indexterm>
        <primary>RECORD NAMING</primary>
      </indexterm>
      <para>
The default record-name generated by FORMS-2 for inclusion in the
user's COBOL source program for screen formatting is as follows:
</para>
<screen>
  bbbbbb-rr (01 level)
</screen>
<para>
  where: <replaceable>bbbbbb</replaceable> is the 1-6 character base specified at screen I01.
  <replaceable>rr</replaceable> is the record number, starting at 00 in the first
  Work Phase and increasing by one for each subsequent Work Phase.
</para>
      <note>
        <para>
If the windows commands are used to define a windows starting
in other than line 1 then the record-name generated will be:
</para>
<para>
  bbbbbb-rr-ll
</para>
<para>
  where <replaceable>ll</replaceable> is the line number. This serves as a useful reminder to
  the programmer when coding the appropriate ACCEPT/DISPLAY statements.
</para>
      </note>
    </section>
    <section>
      <title>DATA NAMING</title>
      <indexterm>
        <primary>DATA NAMING</primary>
      </indexterm>
      <para>
The elementary data-name structure generated by FORMS-2 for inclusion in the
CIS or L/II COBOL source program for screen formatting is as follows:
</para>
<screen>
  bbbbbb-rr-nnnn
</screen>
<para>
  where: <replaceable>nnnn</replaceable> is the sequence of this field within the screen, starting at 0001.
</para>
<para>
  Sometimes it may be more convenient to the programmer to have the screen
coordinates incorporated in the data-name rather than a field sequence
number. This can be achieved by use of the G command during the Work Phase.
</para>
    </section>
  </section>
  <section>
    <title>PICTURE GENERATION</title>
    <indexterm>
      <primary>PICTURE GENERATION</primary>
    </indexterm>
    <para>
Generation of PICTURE clauses by FORMS-2 depends on the type of text selected
at screen W01 at the start of each Work Phase. Note that FORMS-2 will force
field boundaries at the end of each line in order to be compatible with 
certain types of CRT.
</para>
    <section>
      <title>FIXED TEXT</title>
      <indexterm>
        <primary>FIXED TEXT</primary>
      </indexterm>
      <para>
At the end of a fixed text Work Phase FORMS-2 generates only FILLER areas or
named alphanumeric fields with associated VALUE clauses.
</para>
      <para>
        The CIS or L/II COBOL interactive ACCEPT and DISPLAY verbs operate only on named
fields; FILLER areas are left alone. The time taken to display a screen
depends both on the size and also the number of constituent fields.
</para>
      <para>
When processing fixed text screens, FORMS-2 by default generates FILLER
wherever multiple spaces appear. This default can be altered by means of
the J command described in Chapter 3. Alternatively _ (underline) can be
used to force inclusion of spaces within a VALUE clause. The default
character used for this purpose can be changed by means of the M command
described in Chapter 3.
</para>
    </section>
    <section>
      <title>VARIABLE DATA FIELDS</title>
      <indexterm>
        <primary>VARIABLE DATA FIELDS</primary>
      </indexterm>
      <para>
At the end of a variable data Work Phase FORMS-2 generates alphanumeric,
numeric or numeric edited fields depending on the actual characters keyed by
the user (see Chapter 3). These are usually normal CIS COBOL picture
characters 9 and X but note the additional use of 8 and Y as alternatives to
9 and X; and also the exclusion of S, V and P as described under
<emphasis>Variable Data</emphasis> in Chapter 3.
</para>
    </section>
  </section>
  <section>
    <title>EDITING THE DDS FILE</title>
    <para>
Normally the DDS output from FORMS-2 should be all that is required. Where
special circumstances dictate the use of particular datanames or the
disallowed picture characters, the S9 command (See Chapter 3) will allow DDS
lines to be edited prior to output. Alternatively a conventional text editor
can be used to edit the file. However note that this editing process must
be repeated if ever the form is amended by means of FORMS-2.
</para>
    <para>
It is also possible to suppress completely the DDS output for a particular
Work Phase by means of the S1 command. Note that if this is used the record
number incorporated in data-names will still be stepped up by 1 for the next
Work Phase.
</para>
  </section>
  <section>
    <title>INCORPORATION OF DDS FILE CONTENTS</title>
    <indexterm>
      <primary>INCORPORATION OF DDS FILE CONTENTS</primary>
    </indexterm>
    <para>
All that the user has to do to incorporate the generated data descriptions
into the application program is to copy in the DDS file using the COPY
statement available in CIS or L/II COBOL. This is described in the
<citetitle pubwork="book">CIS or L/II COBOL Language Reference Manual</citetitle>.
</para>
    <para>
The COPY statement to incorporate the DEMO1 sample forms designed in
Chapter 7 would be:
</para>
    <programlisting>
000000 COPY "DEMO1.DDS".
</programlisting>
    <para>
and would be coded within the Data Division.
</para>
    <para>
This statement is included in all Check-Out or Index programs generated, and
any of these can be referred to for an example.
</para>
  </section>
</chapter>
