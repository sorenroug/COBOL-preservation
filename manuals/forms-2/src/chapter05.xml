<?xml version="1.0"?>
<chapter xmlns="http://docbook.org/ns/docbook">
  <title>THE CHECK-OUT PROGRAM</title>
  <para>
This Chapter describes the Check-Out program that FORMS-2 can generate
automatically while generating the created forms. The Check-Out program
enables the user to:
</para>
  <itemizedlist>
    <listitem>
      <para>Validate the DDS file</para>
    </listitem>
    <listitem>
      <para>Demonstrate the operation of the proposed application</para>
    </listitem>
    <listitem>
      <para>Check the use of his forms for data entry</para>
    </listitem>
    <listitem>
      <para>Check the use of his forms for data amendment</para>
    </listitem>
  </itemizedlist>
  <para>
The Check-Out source code which is in COBOL includes a COPY statement
for the DDS file exactly as it would be coded in the user's application and
is therefore a true validation of the DDS file when compiled.
</para>
  <para>
The Check-Out program logic is a sequence of DISPLAY or ACCEPT statements
for the screens defined in the FORMS-2 run, in the order in which they were
created. Therefore by entering all required forms in a single FORMS-2 run, a
demonstration program using all the forms can be simply and rapidly created
with no programming necessary. For a complex application the best method
method might be to create each form in isolation, using screen image output only.
FORMS-2 can then be run again to produce the required Check-Out program,
using the facility to re-input screen images
(the FF command or the F command and the F option
in the subsequent screen display). Use of this facility would also enable a
complex sequence of screens to be set up for demonstration purposes
incorporating the same screen more than once.
</para>
  <para>
After passing through the sequence of screens, Check-Out gives the option of
repeating the whole sequence. On the second pass previously entered data is
redisplayed, allowing the user to check the use of his forms for both
initial data entry and data amendment.
</para>
  <section>
    <title>CHECK-OUT PROGRAM GENERATION</title>
    <indexterm>
      <primary>CHECK-OUT PROGRAM GENERATION</primary>
    </indexterm>
    <para>
The facility is invoked by selection of an appropiate option at screen I02
during the Initialisation Phase. Note the the default option results in
generation of the Check-Out Program.
    </para>
    <para>
The source code of the program is written to a file named:
    </para>
    <para>
basename.CHK
    </para>
    <para>
where: basename is the name entered by the user at screen I01 during the Initialisation Phase.
    </para>
  </section>
  <section>
    <title>CHECK-OUT PROGRAM COMPILATION</title>
    <indexterm>
      <primary>CHECK-OUT PROGRAM COMPILATION</primary>
    </indexterm>
    <para>
The program is then compiled from the CHK file. The following files must be
present during compilation:
</para>
    <para>
basename.DDS - the DDS file produced in the FORMS2 run. This must be
on the device/directory selected at Screen I02, or the
default drive if none was selected.
</para>
    <para>
FORMS2.CH1,
FORMS2.CH2 - the skeleton for the Check-Out program on the default device/directory
</para>
    <para>
The Check-Out program is then compiled in the usual way by entering the
standard CIS or L/II COBOL compile command for your Operating System with the source file:       
</para>
    <para>
basename.CHK      
</para>
    <para>
See Appendix D      
</para>
    <para>
Details of compilation using the CIS or L/II COBOL Compiler are given in the
appropiate Operating Guide.    
</para>
  </section>
  <section>
    <title>CHECK-OUT PROGRAM RUNNING</title>
    <indexterm>
      <primary>CHECK-OUT PROGRAM RUNNING</primary>
    </indexterm>
    <section>
      <title>LOADING</title>
      <para>
The program can be loaded immediately after compilation by use of the
standard O/S run command and the name of the intermediate code file:
</para>
      <para>
basename.INT
</para>
      <para>
However, to be able to load directly in subsequent use the = parameter of
the run command should be used and the SAVE file renamed. (See Appendix D
for Operating System specific commands). Thereafter the direct load command
can be used.
</para>
    </section>
    <section>
      <title>CHECK-OUT PROCESSING</title>
      <indexterm>
        <primary>CHECK-OUT PROCESSING</primary>
      </indexterm>
      <para>
The basic function of the Check-Out program is to display the fixed text
fields of the form and enable data to be entered into the variable data
fields of the form in the sequence in which the screens were created.
</para>
      <para>
However the detailed logic is slightly more sophisticated. The following
notes make references to the options taken for screen type at Screen W01,
and these are discussed in Chapter 3.
</para>
      <section>
        <title>Fixed Text Screens</title>
        <indexterm>
          <primary>Fixed Text Screens</primary>
        </indexterm>
        <para>
The fixed text of a form is displayed. If there are two consecutive fixed
text forms, Check-Out pauses after the first display until the user presses
RETURN.
</para>
        <para><emphasis>Fixed text on clear screen</emphasis></para>
        <para>
If option A was taken for the creation of the form, Check-Out clears the CRT
before displaying the screen. 
</para>
<para><emphasis>Fixed text on last screen</emphasis></para>
<para>
  If option B was taken for the creation of the screen, any text displayed
remains on the CRT except where it is overwritten by the text of the new
screen.
</para>
      </section>
      <section>
        <title>Variable Data Screens</title>
        <indexterm>
          <primary>Variable Data Screens</primary>
        </indexterm>
        <para>
An ACCEPT statement is issued for a variable data screen, allowing the user
to enter data in the unprotected areas, (i.e. the fields specified by means
of X's and 9's etc.).
</para>
        <para>
Users can check the extents of the fields. For numeric fields they can also
check that only numeric characters may be entered, and the effect of
entering the left zero fill character ".". (Use of the "." character is
described in the <citetitle pubwork="book">CIS or L/II COBOL Language Reference Manual</citetitle>
under the ACCEPT Statement).
        </para>
        <para>
On other than the first pass through the sequence of screens
entered data is redisplayed before the ACCEPT is issued.
        </para>
        <para>
If the variable data screen includes numeric edited fields, the ACCEPT for
the screen is followed by a corresponding DISPLAY to show the effect of the
editing or normalisation performed by the CIS COBOL run time system. Note
that the normalised fields are not automatically echoed to the CRT.
        </para>
      </section>
    </section>
    <section>
      <title>CHECK-OUT COMPLETION</title>
      <para>
After the entire sequence of screens has been passed, the Check-Out program
displays:
</para>
      <screen>
CHECK-OUT completed
Repeat? [N] (Y=Yes)
</screen>
      <para>
  If it is required to repeat the sequence of screens. Key Y and press RETURN.
</para>
      <para>
Otherwise simply press RETURN to take the default to terminate the program.
</para>
    </section>
  </section>
</chapter>
